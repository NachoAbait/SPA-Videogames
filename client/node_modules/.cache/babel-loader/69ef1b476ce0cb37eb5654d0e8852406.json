{"ast":null,"code":"const initialState = {\n  juegos: [],\n  AllJuegos: [],\n  genres: [],\n  detalle: {}\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_JUEGOS\":\n      return {\n        ...state,\n        juegos: action.payload,\n        AllJuegos: action.payload\n      };\n    case \"GET_GENRES\":\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case \"FILTER_BY_GENRE\":\n      const juegosActuales = state.AllJuegos;\n      const juegosFiltrados = juegosActuales.filter(juego => {\n        return juego.genres.some(genre => genre.name === action.payload);\n      });\n      return {\n        ...state,\n        juegos: juegosFiltrados\n      };\n    case \"ORDEN\":\n      let sortedArr = [];\n      const juegosToSort = [...state.juegos]; // Crear una copia del array de juegos\n      if (action.payload === \"A-Z\") {\n        sortedArr = juegosToSort.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (action.payload === \"Z-A\") {\n        sortedArr = juegosToSort.sort((a, b) => b.name.localeCompare(a.name));\n      } else if (action.payload === \"rating\") {\n        sortedArr = juegosToSort.sort((a, b) => b.rating - a.rating);\n      }\n      return {\n        ...state,\n        juegos: sortedArr\n      };\n    case \"GET_JUEGO_BY_NAME\":\n      return {\n        ...state,\n        juegos: action.payload\n      };\n    case \"GET_DETALLE\":\n      return {\n        ...state,\n        detalle: action.payload\n      };\n    case \"LIMPIAR_DETALLE\":\n      return {\n        ...state,\n        detalle: {}\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","juegos","AllJuegos","genres","detalle","rootReducer","state","arguments","length","undefined","action","type","payload","juegosActuales","juegosFiltrados","filter","juego","some","genre","name","sortedArr","juegosToSort","sort","a","b","localeCompare","rating"],"sources":["C:/Users/nacho/OneDrive/Escritorio/PROYECTOS/HENRY SPAÂ´S/SPA - Videogames/SPA-Videogames/client/src/REDUX/REDUCER/index.js"],"sourcesContent":["const initialState = {\r\n  juegos: [],\r\n  AllJuegos: [],\r\n  genres: [],\r\n  detalle: {},\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_JUEGOS\":\r\n      return {\r\n        ...state,\r\n        juegos: action.payload,\r\n        AllJuegos: action.payload,\r\n      };\r\n\r\n    case \"GET_GENRES\":\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      };\r\n\r\n    case \"FILTER_BY_GENRE\":\r\n      const juegosActuales = state.AllJuegos;\r\n      const juegosFiltrados = juegosActuales.filter((juego) => {\r\n        return juego.genres.some((genre) => genre.name === action.payload);\r\n      });\r\n      return {\r\n        ...state,\r\n        juegos: juegosFiltrados,\r\n      };\r\n\r\n    case \"ORDEN\":\r\n      let sortedArr = [];\r\n      const juegosToSort = [...state.juegos]; // Crear una copia del array de juegos\r\n      if (action.payload === \"A-Z\") {\r\n        sortedArr = juegosToSort.sort((a, b) => a.name.localeCompare(b.name));\r\n      } else if (action.payload === \"Z-A\") {\r\n        sortedArr = juegosToSort.sort((a, b) => b.name.localeCompare(a.name));\r\n      } else if (action.payload === \"rating\") {\r\n        sortedArr = juegosToSort.sort((a, b) => b.rating - a.rating);\r\n      }\r\n      return {\r\n        ...state,\r\n        juegos: sortedArr,\r\n      };\r\n\r\n    case \"GET_JUEGO_BY_NAME\":\r\n      return {\r\n        ...state,\r\n        juegos: action.payload,\r\n      };\r\n\r\n    case \"GET_DETALLE\":\r\n      return {\r\n        ...state,\r\n        detalle: action.payload,\r\n      };\r\n\r\n    case \"LIMPIAR_DETALLE\":\r\n      return {\r\n        ...state,\r\n        detalle: {},\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QACL,GAAGL,KAAK;QACRL,MAAM,EAAES,MAAM,CAACE,OAAO;QACtBV,SAAS,EAAEQ,MAAM,CAACE;MACpB,CAAC;IAEH,KAAK,YAAY;MACf,OAAO;QACL,GAAGN,KAAK;QACRH,MAAM,EAAEO,MAAM,CAACE;MACjB,CAAC;IAEH,KAAK,iBAAiB;MACpB,MAAMC,cAAc,GAAGP,KAAK,CAACJ,SAAS;MACtC,MAAMY,eAAe,GAAGD,cAAc,CAACE,MAAM,CAAEC,KAAK,IAAK;QACvD,OAAOA,KAAK,CAACb,MAAM,CAACc,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAKT,MAAM,CAACE,OAAO,CAAC;MACpE,CAAC,CAAC;MACF,OAAO;QACL,GAAGN,KAAK;QACRL,MAAM,EAAEa;MACV,CAAC;IAEH,KAAK,OAAO;MACV,IAAIM,SAAS,GAAG,EAAE;MAClB,MAAMC,YAAY,GAAG,CAAC,GAAGf,KAAK,CAACL,MAAM,CAAC,CAAC,CAAC;MACxC,IAAIS,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QAC5BQ,SAAS,GAAGC,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,IAAI,CAACM,aAAa,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC;MACvE,CAAC,MAAM,IAAIT,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnCQ,SAAS,GAAGC,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,IAAI,CAACM,aAAa,CAACF,CAAC,CAACJ,IAAI,CAAC,CAAC;MACvE,CAAC,MAAM,IAAIT,MAAM,CAACE,OAAO,KAAK,QAAQ,EAAE;QACtCQ,SAAS,GAAGC,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACE,MAAM,GAAGH,CAAC,CAACG,MAAM,CAAC;MAC9D;MACA,OAAO;QACL,GAAGpB,KAAK;QACRL,MAAM,EAAEmB;MACV,CAAC;IAEH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGd,KAAK;QACRL,MAAM,EAAES,MAAM,CAACE;MACjB,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGN,KAAK;QACRF,OAAO,EAAEM,MAAM,CAACE;MAClB,CAAC;IAEH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGN,KAAK;QACRF,OAAO,EAAE,CAAC;MACZ,CAAC;IAEH;MACE,OAAO;QACL,GAAGE;MACL,CAAC;EACL;AACF;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}